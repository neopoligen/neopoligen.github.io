-- title

From Jinja To MiniJinja To NeoJinja With Pre-Attentive Processing

-- h2

Introduction

Neopoligen combines your content with templates
to make websites. The templates are called "NeoJinja"
files. They look like this one which shows every title 
for a set of blog links:

-- code/
-- neoj
-- subtitle: blog-links.neoj

[!- set blog_links = site.collection_from_tags(page_id, [["blog"]]) -!]

[!- for link in blog_links.tree  -!]
  [@- site.page_title(link.id) -@]
[!- endfor -!]

-- /code

The `[! ... !]`` snippets are template instructions that set up
the `blog_links`` variable and tell it to do a `for ... endfor`` 
loop over the `[@ ... @]`` snippet that outputs each title in turn. 

You can read more about the functionality in the
<<ilink: 2dmzomyo|template documentation>>. For this
post, I want to talk about the format itself. 

-- h2

The Origin Format

NeoJinja is based off (and powered by) a template
engine called MiniJinja^mjinja^^ which is, in turn, based
off one called Jinja^jinja^^. The Jinja engine is used
with the Python^python^^ programming language. MiniJinja
mimics its behavior, but in a language called Rust^rust^^.
Neopoligen is written mainly in Rust and I would have 
used MiniJinja directly except for one thing, it
was really hard for me to read. 

Here's the same NeoJinja template followed by the 
MiniJinja version. Both do exactly the same thing. The
only difference is the characters used to mark the
start and end points of the template instruction and
output snippets. 

-- code
-- neoj
-- subtitle: NeoJinja

[!- set blog_links = site.collection_from_tags(page_id, [["blog"]]) -!]

[!- for link in blog_links.tree  -!]
  [@- site.page_title(link.id) -@]
[!- endfor -!]

-- code/
-- neoj
-- subtitle: MiniJinja

{%- set blog_links = site.collection_from_tags(page_id, [["blog"]]) -%}

{%- for link in blog_links.tree  -%}
  {{- site.page_title(link.id) -}}
{%- endfor -%}

-- /code

-- h2

The Differences

So, `{%- ... -%}`` becomes `[!- ... -!]``

And, `{{- ... -}}`` becomes `[@- ... -@]``

Not shown in the example are comments which go from `{#- ... -#}`` to `[#- ... -#]``

There are two reasons I like this. First and foremost I 
find it a lot easier to scan for the sharp corners of the
`[]`` brackets compared to `{}``. My guess is this is
a pre-attentive processing thing^pap^^. I first learned
about that idea from Stephen Few's book Information
Dashboard Design^idd^^. Basically, our brains process
some visual information before we're consciously aware
of it. 

Here's an example straight from the book to demonstrate. 
Start by counting the number of 5's in this block of
numbers:


-- html

<div id="number_block">
<span class="c4">4</span><span class="cD">D</span><span class="cP">P</span><span class="cT">T</span><span class="cD">D</span><span class="c7">7</span><span class="cK">K</span><span class="cW">W</span><span class="cL">L</span>
<span class="cC">C</span><span class="cJ">J</span><span class="c5">5</span><span class="cF">F</span><span class="cD">D</span><span class="c5">5</span><span class="cC">C</span><span class="cY">Y</span><span class="cN">N</span>
<span class="cD">D</span><span class="cI">I</span><span class="cP">P</span><span class="cU">U</span><span class="cC">C</span><span class="cU">U</span><span class="cJ">J</span><span class="c3">3</span><span class="cT">T</span>
<span class="cT">T</span><span class="cQ">Q</span><span class="cZ">Z</span><span class="c1">1</span><span class="c6">6</span><span class="cO">O</span><span class="c1">1</span><span class="c6">6</span><span class="cL">L</span>
<span class="c8">8</span><span class="cQ">Q</span><span class="cT">T</span><span class="c9">9</span><span class="c7">7</span><span class="cJ">J</span><span class="cT">T</span><span class="cA">A</span><span class="c9">9</span>
<span class="cZ">Z</span><span class="cL">L</span><span class="cZ">Z</span><span class="cQ">Q</span><span class="cX">X</span><span class="cF">F</span><span class="cA">A</span><span class="cW">W</span><span class="cI">I</span>
<span class="cX">X</span><span class="c5">5</span><span class="cF">F</span><span class="c1">1</span><span class="cT">T</span><span class="cI">I</span><span class="c3">3</span><span class="cJ">J</span><span class="cQ">Q</span>
<span class="cE">E</span><span class="cR">R</span><span class="c5">5</span><span class="cL">L</span><span class="c2">2</span><span class="cU">U</span><span class="cO">O</span><span class="c6">6</span><span class="cH">H</span>
<span class="cM">M</span><span class="cG">G</span><span class="cO">O</span><span class="c6">6</span><span class="cD">D</span><span class="cS">S</span><span class="c4">4</span><span class="cY">Y</span><span class="cZ">Z</span>
<span class="cS">S</span><span class="c2">2</span><span class="c0">0</span><span class="cU">U</span><span class="c2">2</span><span class="cG">G</span><span class="cW">W</span><span class="cD">D</span><span class="cV">V</span>
<span class="cN">N</span><span class="cW">W</span><span class="cU">U</span><span class="cJ">J</span><span class="cD">D</span><span class="c5">5</span><span class="cN">N</span><span class="cY">Y</span><span class="cI">I</span>
</div>



-- css

#number_block {
    font-family: var(--mono);
    color: var(--color-4);
}






-- footnote
-- id: idd
-- title: Information Dashboard Design: Displaying Data for At-a-Glance Monitoring
-- url: https://www.amazon.com/dp/1938377001/

This is the second version of the book. I read the first
edition (subtitled "The Effective Visual Communication Of Data"). 
but I expect it's still just as good. Highly recommended if
you're at all interested in the topic or even just design
in general.


-- footnote
-- id: mjinja
-- title: The MiniJinja Template Engine
-- url: https://docs.rs/minijinja/latest/minijinja/

-- footnote
-- id: jinja
-- title: The Jinja2 Template Engine
-- url: https://jinja.palletsprojects.com/en/3.1.x/

-- footnote
-- id: python
-- title: The Python Programming Language
-- url: https://www.python.org/

-- footnote
-- id: rust
-- title: The Rust Programming Language
-- url: https://www.rust-lang.org/

-- footnote
-- id: pap
-- title: Pre-attentive processing
-- url: https://en.wikipedia.org/wiki/Pre-attentive_processing


-- metadata
-- date: 2024-03-07
-- id: 2dn38hs5
-- status: draft